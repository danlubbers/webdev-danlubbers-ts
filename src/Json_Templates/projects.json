[
  {
    "client": "Psī",
    "position": "Front-End Software Engineer",
    "tech": "Git | Github | React | HTML | CSS/SASS | ES6+ Javascript | Typescript | Material UI | Google-Maps | Google Analytics | Twilio Chat",
    "details": "Psī is a mobile application that helps users navigate the complex issues of aging and caregiving for elderly loved ones, while providing significant value to Medicare Advantage (MA) health plans, employer groups, and commercial health plans. The Psī app is based on a rigorously tested face-to-face model, as well as proven telephonic advanced illness/family caregiving methods. Psī’s integrated health counseling model has demonstrated decreased hospitalizations in the senior’s last years of life, as well as improved quality of life for family caregivers and their loved ones. Utilizing a digital version of Psī’s model, MA plans will benefit from avoided hospitalizations, referrals to preferred providers, earlier hospice referrals, and reduced total costs in the last years of members’ lives. Employers and commercial health plans also can benefit from employees’ improved workplace productivity and decreased medical costs (anxiety, depression, and addiction).",
    "github-repo": null,
    "promo-image": "psi-iphone-mbp-promo.png",
    "website": "app.psilife.com"
  },
  {
    "client": "Sunny Ra",
    "position": "Full-Stack Software Engineer | UX / UI | Photographer",
    "tech": "React | HTML | SASS | Javascript | Redux | Express | React Helmet | PostgresSQL | Digital Ocean | Google Analytics",
    "details": "Client/Artist, Sunny Ra wanted a complete redesign of her portfolio site. I created the wireframe and designed the layout and color scheme. I photographed her portrait for the 'About' section. I then built her site using Reactjs. I made the site fully responsive using Media Queries in SASS. I used React Helmet so google would be able to crawl her site searching for keywords helping SEO (Seach Engine Optimization). I added Google Analytics so Sunny can track her traffic going to her new site.",
    "github-repo": "github.com/danlubbers/sunny-ra.com",
    "promo-image": "sunny-ra-website-apple-devices-2019.png",
    "website": "sunny-ra.com"
  },
  {
    "client": "Book Store",
    "position": "AlbanyCanCode Project",
    "tech": "React | HTML | SASS | Javascript | UUID Authentication | Protected Routes | Context API",
    "details": "Create a book store web application similar to Barnes & Nobles or Amazon. Users who visit the book store will have to sign in and once credentials are validated they can then go to their book shelf, search for new books in the database or see detailed information of a specific book on a separate page. They can save or move any book to one of three shelves: \"Want to Read\", \"Currently Reading\", or \"Read.\"",
    "github-repo": "github.com/danlubbers/book-store",
    "promo-image": "bookstore-media-promo.png",
    "website": null
  },
  {
    "client": "Retroboard",
    "position": "AlbanyCanCode Project",
    "tech": "React | HTML | SASS | Javascript ",
    "details": "A retrospective board is used within the Scrum workflow. Scrum is the most popular Agile style of software project management used to guide the software development life cycle. Scrum style management is based on four basic ceremonies for each sprint or software release: the 1.) Sprint Planning meeting, 2.) Daily Stand-up, 3.) Sprint Review, and 4.) Sprint Retrospective. As a part of the Sprint Retrospective, team members will use a retrospective board to reflect on what went well and what they need to improve on for next time.",
    "github-repo": "github.com/danlubbers/retro-board",
    "promo-image": "retroboard-mbp-promo.png",
    "website": null
  },
  {
    "client": "TrailSpot",
    "position": "AlbanyCanCode Project",
    "tech": "React | HTML | SASS | Javascript | Express | Digital Ocean",
    "details": "A web app that gets the users location and gives a selection of trails around the area or the user can search by city/state to find trails for future trips. Current weather conditions are shown for the searched location as well.",
    "github-repo": "github.com/danlubbers/trailspot-reactjs",
    "promo-image": "trailspot-iphone-promo.png",
    "website": "trailspot.danlubbers.com/"
  },
  {
    "client": "Arcteryx",
    "position": "DevMountain: Personal Project",
    "tech": "React | HTML | SASS | Javascript | Redux | Node | Express | PostgresQL | Hover | Digital Ocean",
    "details": "I chose to clone an e-commerce site. Cloning this site allowed me to showcase that I can take a design and recreate the layout into a full functioning site. I used CSS3/SASS for all of the styling and to make the design mobile responsive for iphone 6, 7, 8 and desktop. I used React.js to build the site with the use of Javascript along with Redux to manage the \"state.\" I used PostgreSQL and Heroku for database management of the products. The Domain is registered and maintained through Hover and the site is hosted on Digital Ocean.",
    "github-repo": "github.com/danlubbers/arcteryx-clone",
    "promo-image": "arcteryx-mbp-promo.png",
    "website": "arcteryxclone.danlubbers.com"
  },
  {
    "client": "Ruffdoggies",
    "position": "DevMountain: Group Project",
    "tech": "React | HTML | SASS | Javascript | Redux | Node | Express | PostgresQL | Hover | Digital Ocean",
    "details": "Our group wanted to clone an e-commerce site. Cloning this site allowed us to showcase that we can take a design and recreate the layout into a full functioning site. We used CSS3/SASS for all of the styling. We used React.js to build the site with the use of Javascript along with Redux to manage the \"state.\" We used PostgresSQL and Heroku for database management of the products. The Domain is registered and maintained through Hover and the site is hosted on Digital Ocean.",
    "github-repo": "github.com/danlubbers/ruffwear-clone",
    "promo-image": "ruffdoggies-mbp-promo.png",
    "website": "ruffdoggies.danlubbers.com"
  },
  {
    "client": "Hangman",
    "position": "AlbanyCanCode Project",
    "tech": "Javascript | Node",
    "details": "Hangman game made entirely with Vanilla Javascript in Nodejs. Words are chosen at random. Only the letters A - Z will be accepted. The user will get 6 incorrect guesses before that round is over. A duplicate incorrect guess will not count against the user. Each round will start automatically after the first round is finished. The user can quit at any time by typing CTRL-C.",
    "github-repo": "github.com/danlubbers/hangman",
    "promo-image": "hangman-mbp-promo.png",
    "website": null
  }
]
